{"version":3,"sources":["components/MenuBar.js","routes/Home.js","routes/TestChantGPT.js","App.js","index.js"],"names":["MenuBar","_jsxs","id","children","_jsx","Link","to","concat","process","Home","SearchResult","_ref","modelInfo","openAIApi","_useState","useState","_useState2","_slicedToArray","requestComplete","setRequestComplete","_useState3","_useState4","reponseText","setResponseText","_useState5","_useState6","requestObj","setRequestObj","_useState7","_useState8","completionObj","setCompletionObj","_useState9","_useState10","isCreating","setIsCreating","_useState11","_useState12","excutionTime","setExcutionTime","_useState13","_useState14","temperature","setTemperature","_useState15","_useState16","maxTokens","setMaxTokens","_useState17","_useState18","topP","setTopP","_useState19","_useState20","frequencyPenalty","setFrequencyPenalty","_useState21","_useState22","presencePenalty","setPresencePenalty","_useState23","_useState24","nCompletion","setNCompletion","_useState25","_useState26","stream","setStream","_useState27","_useState28","systemQuery","setSystemQuery","preStyle","whiteSpace","wordBreak","overflow","onSubmitMessageSend","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","targetTextareas","queryTextArr","query","_requestObj","start","data","end","_response","wrap","_context","prev","next","preventDefault","target","querySelectorAll","forEach","_text_area","_userInput","value","trim","length","push","dataset","theme","console","log","join","model","messages","role","content","max_tokens","top_p","frequency_penalty","presence_penalty","n","stop","Date","createChatCompletion","sent","toFixed","choices","message","replaceAll","t0","response","alert","status","error","_x","apply","arguments","onChangeStream","changedValue","toLowerCase","includes","useEffect","type","min","max","step","placeholder","style","width","onChange","now","parseFloat","parseInt","name","checked","defaultValue","onSubmit","rows","cols","disabled","usage","prompt_tokens","completion_tokens","total_tokens","verticalAlign","JSON","stringify","TestChantGPT","_require","require","Configuration","OpenAIApi","_useState29","_useState30","isLoading","setIsLoading","_useState31","_useState32","isConnected","setIsConnected","_useState33","_useState34","setOpenAIApi","_useState35","_useState36","models","setModels","_useState37","_useState38","setModelInfo","getOpenAIApi","_ref3","_callee2","apiKey","organization","configiration","_openAIApi","_args2","_context2","undefined","listModels","abrupt","_x2","getModels","_ref4","_callee3","_models","_context3","onClickLoadModels","size","color","href","onClick","organizationIdInput","document","body","querySelector","apiKeyInput","orgainzationId","targetInput","targetModel","filter","item","htmlFor","selectedItem","targetId","list","map","idx","Object","keys","App","BrowserRouter","Routes","Route","path","element","Test","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.1f40cf3e.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\n\nfunction MenuBar() {\n    return (\n        <div id=\"menu-bar\">\n            <span>\n                <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n            </span>\n            <span> | </span>\n            <span>\n                <Link to={`${process.env.PUBLIC_URL}/test-chatgpt`}>Test ChatGPT</Link>\n            </span>\n        </div>\n    );\n}\n\nexport default MenuBar;","import MenuBar from \"../components/MenuBar\";\n\nfunction Home() {\n    return (\n        <div>\n            <MenuBar />\n            <h1>Home</h1>\n            <p>Welcome to tuna's blog!</p>\n            <p>Hi JiJi from Nonhyeon!🥸👋🏻</p>\n        </div>\n    );\n}\n\nexport default Home;","/* eslint-disable react/jsx-no-target-blank */\nimport MenuBar from \"../components/MenuBar\";\nimport { useState, useEffect } from \"react\";\nimport {createSession} from \"better-sse\";\n\n// const session = await createSession(req, res);\n// if (!session.isConnected) throw new Error('Not connected');\n\nfunction SearchResult({ modelInfo, openAIApi }) {\n    const [requestComplete, setRequestComplete] = useState(false);\n    const [reponseText, setResponseText] = useState(\"\");\n    const [requestObj, setRequestObj] = useState(\"\");\n    const [completionObj, setCompletionObj] = useState(\"\");\n    const [isCreating, setIsCreating] = useState(false);\n    const [excutionTime, setExcutionTime] = useState(\"\");\n\n    const [temperature, setTemperature] = useState(1);\n    const [maxTokens, setMaxTokens] = useState(16);\n    const [topP, setTopP] = useState(1);\n    const [frequencyPenalty, setFrequencyPenalty] = useState(0);\n    const [presencePenalty, setPresencePenalty] = useState(0);\n    const [nCompletion, setNCompletion] = useState(1);\n    const [stream, setStream] = useState(false);\n    const [systemQuery, setSystemQuery] = useState(\"주어진 키워드와 문장을 바탕으로 나의 취미활동을 10 줄 미만으로 자연스럽게 기록해줘\");\n\n    const preStyle = {\n        whiteSpace: \"pre-wrap\",\n        wordBreak: \"break-all\",\n        overflow: \"auto\",\n    };\n\n    const onSubmitMessageSend = async (event) => {\n        event.preventDefault();\n        const targetTextareas = event.target.querySelectorAll(\"textarea\");\n\n        const queryTextArr = [];\n        targetTextareas.forEach(_text_area => {\n            const _userInput = _text_area.value.trim();\n            if (_userInput.length > 0) {\n                queryTextArr.push(`${_text_area.dataset.theme}: ${_userInput}`);\n            }\n        });\n\n        console.log(modelInfo.id);\n        console.log(temperature);\n        console.log(maxTokens);\n        console.log(queryTextArr);\n        let query = \"\";\n        if ( queryTextArr.length > 0 ) {\n            query = queryTextArr.join(\" / \");\n        }\n\n        if (query.length > 0) {\n            try {\n                console.log(\"request to openAI\");\n                const _requestObj = {\n                    model: modelInfo.id,\n                    messages: [\n                        { role: \"system\", content: systemQuery },\n                        { role: \"user\", content: query },\n                    ],\n                    temperature: temperature,\n                    max_tokens: maxTokens,\n                    top_p: topP,\n                    frequency_penalty: frequencyPenalty,\n                    presence_penalty: presencePenalty,\n                    n: nCompletion,\n                    stop: \"\",\n                    stream: stream\n                };\n\n                setRequestObj(_requestObj);\n                setIsCreating(true);\n                const start = new Date()\n                const data = await openAIApi.createChatCompletion(_requestObj);\n                const end = new Date() - start;\n                setExcutionTime(`Execution time : ${(end/1000).toFixed(2)} secs`);\n                setIsCreating(false);\n                \n                console.log(\"suceess to get response\");\n                console.log(data);\n                setCompletionObj(data);\n                let _response = data.data.choices[0].message.content;\n                _response = _response.replaceAll(\". \", \".\\n\");\n                setResponseText(_response);\n                setRequestComplete(true);\n            } catch (e) {\n                if (e.response) {\n                    alert(`${e.response.status}: ${e.response.data.error.message}`);\n                    console.log(e.response);\n                } else {\n                    alert(e.message);\n                }\n            }\n        }\n    };\n\n    const onChangeTemperature = (event) => {\n        console.log(\"triggered onChangeTemperature\" + Date.now());\n        const defaultValue = 1;\n        const changedValue = parseFloat(event.target.value);\n        if ( changedValue > 2 || changedValue < 0 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setTemperature(defaultValue);\n        } else {\n            setTemperature(changedValue);\n        }\n    }\n    \n    const onChangeMaxTokens = (event) => {\n        console.log(\"triggered onChangeMaxTokens\" + Date.now());\n        const defaultValue = 16;\n        const changedValue = parseInt(event.target.value);\n        if ( changedValue > 2048 || changedValue < 0 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setTemperature(defaultValue);\n        } else {\n            setMaxTokens(changedValue);\n        }\n    }\n    \n    const onChangeTopP = (event) => {\n        const defaultValue = 1;\n        const changedValue = parseFloat(event.target.value);\n        if ( changedValue > 2 || changedValue < 0 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setTopP(defaultValue);\n        } else {\n            setTopP(changedValue);\n        }\n    }\n\n    const onChangeFrequencyPenalty = (event) => {\n        const defaultValue = 0;\n        const changedValue = parseFloat(event.target.value);\n        if ( changedValue > 2.0 || changedValue < -2.0 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setFrequencyPenalty(defaultValue);\n        } else {\n            setFrequencyPenalty(changedValue);\n        }\n    }\n\n    const onChangePresencePenalty = (event) => {\n        const defaultValue = 0;\n        const changedValue = parseFloat(event.target.value);\n        if ( changedValue > 2.0 || changedValue < -2.0 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setPresencePenalty(defaultValue);\n        } else {\n            setPresencePenalty(changedValue);\n        }\n    }\n\n    const onChangeNCompletion = (event) => {\n        const defaultValue = 1;\n        const changedValue = parseInt(event.target.value);\n        if ( changedValue > 5 || changedValue < 1 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setNCompletion(defaultValue);\n        } else {\n            setNCompletion(changedValue);\n        }\n    }\n\n    const onChangeStream = (event) => {\n        const defaultValue = false;\n        const changedValue = event.target.value.toLowerCase();\n        if ( ! [\"true\", \"false\"].includes(changedValue) ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setStream(defaultValue);\n        } else {\n            setStream(changedValue === \"true\");\n        }\n    }\n    \n    const onChangeSystemQuery = (event) => {\n        const defaultValue = \"주어진 키워드와 문장을 바탕으로 나의 취미활동을 10 줄 미만으로 자연스럽게 기록해줘\";\n        const changedValue = event.target.value.trim();\n        if ( changedValue.length < 0 ) {\n            event.preventDefault();\n            event.target.value = defaultValue;\n            setSystemQuery(defaultValue);\n        }\n        setSystemQuery(changedValue);\n    }\n\n    useEffect(() => {\n        // addTextarea();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <h3>GPT Settings</h3>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>temperature: </td>\n                            <td>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    max=\"2\"\n                                    step=\"0.1\"\n                                    placeholder=\"1\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeTemperature}\n                                    value={temperature}\n                                />\n                                <span> (default: 1 / min: 0 / max: 2)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>max_tokens: </td>\n                            <td>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    max=\"2048\"\n                                    step=\"1\"\n                                    placeholder=\"16\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeMaxTokens}\n                                    value={maxTokens}\n                                />\n                                <span> (default: 16 / min: 0 / max: 2048)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>top_p: </td>\n                            <td>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    max=\"2\"\n                                    step=\"0.1\"\n                                    placeholder=\"1\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeTopP}\n                                    value={topP}\n                                />\n                                <span> (default: 1 / min: 0 / max: 2)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>frequency_penalty: </td>\n                            <td>\n                                <input\n                                    type=\"number\"\n                                    min=\"-2.0\"\n                                    max=\"2.0\"\n                                    step=\"0.1\"\n                                    placeholder=\"0\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeFrequencyPenalty}\n                                    value={frequencyPenalty}\n                                />\n                                <span> (default: 0 / min: -2.0 / max: 2.0)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>presence_penalty: </td>\n                            <td>\n                                <input\n                                    type=\"number\"\n                                    min=\"-2.0\"\n                                    max=\"2.0\"\n                                    step=\"0.1\"\n                                    placeholder=\"0\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangePresencePenalty}\n                                    value={presencePenalty}\n                                />\n                                <span> (default: 0 / min: -2.0 / max: 2.0)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>n_completion: </td>\n                            <td>\n                                <input\n                                    type=\"number\"\n                                    min=\"1\"\n                                    max=\"5\"\n                                    step=\"1\"\n                                    placeholder=\"1\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeNCompletion}\n                                    value={nCompletion}\n                                />\n                                <span> (default: 1 / min: 1 / max: 5)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>stream: </td>\n                            <td>\n                                <input\n                                    type=\"radio\"\n                                    name=\"stream\"\n                                    value=\"false\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeStream}\n                                    checked={stream === false}\n                                />\n                                <span> (false)</span>\n                                <input\n                                    type=\"radio\"\n                                    name=\"stream\"\n                                    value=\"true\"\n                                    style={{ width: \"50px\" }}\n                                    onChange={onChangeStream}\n                                    checked={stream === true}\n                                />\n                                <span> (true)</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>system message (request): </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"주어진 키워드와 문장을 바탕으로 나의 취미활동을 10 줄 미만으로 자연스럽게 기록해줘\"\n                                    style={{ width: \"800px\" }}\n                                    onChange={onChangeSystemQuery}\n                                    value={systemQuery}\n                                />\n                                <span> (role of system)</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <h3>{`Template`}</h3>\n            <form onSubmit={onSubmitMessageSend}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>취미활동</td>\n                            <td>\n                                <textarea\n                                    rows=\"2\"\n                                    cols=\"80\"\n                                    placeholder=\"request keywords or sentences\"\n                                    data-theme=\"취미활동\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>날짜</td>\n                            <td>\n                                <textarea\n                                    rows=\"2\"\n                                    cols=\"80\"\n                                    placeholder=\"request keywords or sentences\"\n                                    data-theme=\"날짜\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>장소</td>\n                            <td>\n                                <textarea\n                                    rows=\"2\"\n                                    cols=\"80\"\n                                    placeholder=\"request keywords or sentences\"\n                                    data-theme=\"장소\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>함께 취미활동을 한 사람</td>\n                            <td>\n                                <textarea\n                                    rows=\"2\"\n                                    cols=\"80\"\n                                    placeholder=\"request keywords or sentences\"\n                                    data-theme=\"함께 취미활동을 한 사람\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>취미활동 내용</td>\n                            <td>\n                                <textarea\n                                    rows=\"5\"\n                                    cols=\"80\"\n                                    placeholder=\"request keywords or sentences\"\n                                    data-theme=\"취미활동 내용\"\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br />\n                <button>Create Writing</button>\n            </form>\n\n            <hr />\n            <div>\n                <h3>Result</h3>\n                { ! requestComplete && ! isCreating\n                    ? (\n                        <div>\n                            <span>Output</span>\n                            <br />\n                            <textarea\n                                disabled\n                                rows=\"15\"\n                                cols=\"150\"\n                                value=\"\"\n                            />\n                        </div>\n                    )\n                    : isCreating\n                    ? (\n                        <div>\n                            <span>Output</span>\n                            <br />\n                            <textarea\n                                disabled\n                                rows=\"15\"\n                                cols=\"150\"\n                                value={`Wait a second! Writing is generating by ${modelInfo.id} ... `}\n                            />\n                        </div>\n                    )\n                    : (\n                        <div>\n                            <span>{excutionTime}</span>\n                            <br />\n                            <span>Token Usage</span>\n                            <ul>\n                                <li>{`prompt_tokens (request) : ${completionObj.data.usage.prompt_tokens}`}</li>\n                                <li>{`completion_tokens (response) : ${completionObj.data.usage.completion_tokens}`}</li>\n                                <li>{`total_tokens (total) : ${completionObj.data.usage.total_tokens}`}</li>\n                            </ul>\n                            \n                            <span>Output</span>\n                            <br />\n                            <textarea\n                                disabled\n                                rows=\"15\"\n                                cols=\"150\"\n                                value={reponseText}\n                            />\n                            <table style={{width:\"90%\"}}>\n                                <tbody>\n                                    <tr>\n                                        <td>Request</td>\n                                        <td>Response</td>\n                                    </tr>\n                                    <tr>\n                                        <td style={{width:\"50%\", verticalAlign:\"top\"}}>\n                                            <pre style={preStyle}>\n                                                {JSON.stringify(requestObj, null, 2)}\n                                            </pre>\n                                        </td>\n                                        <td style={{width:\"50%\", verticalAlign:\"top\"}}>\n                                            <pre style={preStyle}>\n                                                {JSON.stringify(completionObj, null, 2)}\n                                            </pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\nfunction TestChantGPT() {\n\n    const { Configuration, OpenAIApi } = require(\"openai\");\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [isConnected, setIsConnected] = useState(false);\n    const [openAIApi, setOpenAIApi] = useState({});\n    const [models, setModels] = useState([]);\n    const [modelInfo, setModelInfo] = useState({});\n\n    const getOpenAIApi = async (apiKey, organization = \"\") => {\n\n        if (!organization) organization = process.env.REACT_APP_OPENAI_ORGANIZATION;\n        const configiration = new Configuration({\n            organization: organization,\n            apiKey: apiKey,\n        });\n\n        const _openAIApi = new OpenAIApi(configiration);\n        try {\n            await _openAIApi.listModels();\n        } catch (e) {\n            alert(e.response.data.error.message);\n            return;\n        }\n        setOpenAIApi(_openAIApi);\n        setIsConnected(true);\n    }\n\n    const getModels = async () => {\n        if (openAIApi) {\n            const response = await openAIApi.listModels();\n            const models = response.data.data;\n            console.log(models);\n            setModels(models);\n            setIsLoading(false);\n        }\n    }\n\n    const onChangeModel = (event) => {\n        if (event.target.value === \"\") {\n            return;\n        }\n\n        const selectedItem = document.querySelector(\"#model-list option[value='\" + event.target.value + \"']\");\n        let targetId = \"\";\n        if (selectedItem) {\n            targetId = selectedItem.id;\n        }\n\n        if (targetId) {\n            event.target.id = targetId;\n        }\n        else {\n            event.target.id = \"no-select\";\n        }\n    };\n\n    const onSubmitSelectModel = (event) => {\n        event.preventDefault();\n        const targetInput = event.target.querySelector(\"input\");\n        const targetModel = models.filter((item) => item.id === targetInput.id);\n        console.log(targetModel);\n        if (targetModel.length > 0) {\n            setModelInfo(targetModel[0]);\n        } else {\n            setModelInfo({});\n        }\n    };\n\n    const onClickConnectOpenAI = (event) => {\n        event.preventDefault();\n        const organizationIdInput = document.body.querySelector(\"#orgainzation-id\");\n        const apiKeyInput = document.body.querySelector(\"#apikey\");\n        const orgainzationId = organizationIdInput.value.trim();\n        const apiKey = apiKeyInput.value.trim();\n        getOpenAIApi(apiKey, orgainzationId);\n        organizationIdInput.value = \"\";\n        apiKeyInput.value = \"\";\n    };\n\n    const onClickLoadModels = (event) => { getModels() };\n\n    return (\n        <div>\n            <MenuBar />\n            <h1>\n                Test ChatGPT API\n            </h1>\n            <form>\n                <input\n                    type=\"text\"\n                    id=\"orgainzation-id\"\n                    size=\"50\"\n                    placeholder=\"Organization ID (leave it blank to use default ID)\"\n                />\n                <span color=\"grey\"> Don't know your ID? <a href=\"https://platform.openai.com/account/org-settings\" target=\"_blank\">check it here</a>\n                </span>\n                <br />\n                <input\n                    type=\"text\"\n                    id=\"apikey\"\n                    size=\"50\"\n                    placeholder=\"API Key\"\n                />\n                <span color=\"grey\"> Don't know your Key? <a href=\"https://platform.openai.com/account/api-keys\" target=\"_blank\">check it here</a>\n                </span>\n                \n                <br />\n                <button onClick={onClickConnectOpenAI}>Connect to OpenAI</button>\n                <span> ... </span>\n                {!isConnected\n                    ? (<font color=\"red\">Disconnected</font>)\n                    : (<font color=\"greed\">Connected</font>)\n                }\n            </form>\n            <h3>\n                <span>Support Models ({models.length}) </span>\n                {\n                    isConnected\n                        ? (<button onClick={onClickLoadModels}>Load Models</button>)\n                        : (<button disabled onClick={onClickLoadModels}>Load Models</button>)\n                }\n            </h3>\n            {isLoading\n                ? (<h3>Loading models ...</h3>)\n                : (\n                    <div>\n                        <form onSubmit={onSubmitSelectModel}>\n                            <label htmlFor=\"model-input\">Select Model</label><br />\n                            <input\n                                onChange={onChangeModel}\n                                type=\"text\"\n                                list=\"model-list\"\n                                id=\"no-select\"\n                                size=\"35\"\n                            />\n                            <datalist id=\"model-list\">\n                                {models.map((model, idx) => <option id={model.id} value={`${model.id}`} key={idx}>{`${model.id}`}</option>)}\n                            </datalist>\n                            <button>Search</button>\n                        </form>\n                        <hr />\n                        {Object.keys(modelInfo).length\n                            ? <SearchResult modelInfo={modelInfo} openAIApi={openAIApi} />\n                            : \"no match\"}\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\nconsole.log('running...');\n\nexport default TestChantGPT;","import {\n  BrowserRouter,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Test from \"./routes/TestChantGPT\";\n\nfunction App() {\n  console.log(process.env.PUBLIC_URL);\n  return (\n      <BrowserRouter>\n          <Routes>\n              <Route path={process.env.PUBLIC_URL + \"/\"} element={<Home />} />\n              <Route path={process.env.PUBLIC_URL + \"/test-chatgpt\"} element={<Test />} />\n          </Routes>\n      </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}